http://msdn.microsoft.com/ru-ru/library/5h0k2e6x.aspx

Создание проекта
При создании нового проекта следует задать его имя, чтобы были установлены корневое пространство имен, имя сборки и имя проекта, а создаваемый по умолчанию компонент был помещен в нужное пространство имен.
Чтобы создать библиотеку элементов управления ValueButtonLib и элемент управления ValueButton
В меню Файл выберите Создать и выберите пункт Проект, чтобы открыть диалоговое окно Новый проект.
Из списка проектов Visual C# выберите шаблон проекта Библиотека элементов управления Windows Forms и в поле Имя введите ValueButtonLib.
Имя проекта (ValueButtonLib) также назначается по умолчанию корневому пространству имен. Для определения имен компонентов в сборке используется корневое пространство имен. Например, если в двух сборках содержатся компоненты с именем ValueButton, то можно указать свой компонент ValueButton, используя имя ValueButtonLib.ValueButton. Дополнительные сведения см. в разделе Пространства имен (Руководство по программированию в C#).
В обозревателе решений щелкните правой кнопкой мыши UserControl1.cs и выберите в контекстном меню команду Переименовать. Измените имя файла на ValueButton.cs. Нажмите кнопку Да, чтобы переименовать все ссылки на элемент кода UserControl1.
В обозревателе решений щелкните правой кнопкой мыши файл ValueButton.cs и выберите Просмотреть код.
Найдите строку инструкции class, public partial class ValueButton, и измените тип, наследуемый этим элементом управления от UserControl, на Button. То позволит элементу управления унаследовать всю функциональность элемента управления Button.
В обозревателе решений откройте узел ValueButton.cs для отображения созданного файла кода ValueButton.Designer.cs. Откройте этот файл в Редакторе кода.
Найдите метод InitializeComponent и удалите строку, присваивающую свойство AutoScaleMode. Это свойство отсутствует в элементе управления Button.
Из меню Файл выберите команду Сохранить все, чтобы сохранить проект.
 Примечание
Обратите внимание на то, что наглядный конструктор теперь недоступен. Поскольку элемент управления Button определяет свойства своего отображения, их нельзя изменить в конструкторе. Он будет иметь точно такое же визуальное представление, как и класс, наследником которого он является (то есть Button), если в коде не было указано иначе. На поверхность разработки несмотря на это можно добавлять компоненты, не имеющие элементов пользовательского интерфейса.
Добавление свойства в наследуемый элемент управления
Один из возможных способов использования наследуемых элементов управления форм Windows Forms — это создание элементов управления, внешне идентичных стандартным элементам управления, но предоставляющих настраиваемые свойства. В этом разделе в элемент управления будет добавлено свойство ButtonValue.
Чтобы добавить свойство Value, выполните следующие действия.
В обозревателе решений щелкните правой кнопкой мыши ValueButton.cs и выберите команду Просмотреть код.
Найдите инструкцию class. Сразу после закрывающей скобки ({) введите следующий код:
[C#]
// Creates the private variable that will store the value of your 
// property.
private int varValue;
// Declares the property.
public int ButtonValue
{
   // Sets the method for retrieving the value of your property.
   get
   {
      return varValue;
   }
   // Sets the method for setting the value of your property.
   set
   {
      varValue = value;
   }
}
В этом коде задаются методы для сохранения и извлечения свойства ButtonValue. Оператор get задает значение, которое сохраняется в закрытой переменной varValue, а оператор set присваивает значение закрытой переменной с помощью зарезервированного слова value.
Из меню Файл выберите команду Сохранить все, чтобы сохранить проект.
Тестирование элемента управления
Элементы управления не являются автономными проектами; они должны быть включены в контейнер. Чтобы протестировать элемент управления, необходимо предоставить для его запуска тестовый проект. Также необходимо сделать элемент управления доступным для тестового проекта, построив (скомпилировав) его. В этом разделе демонстрируется построение элемента управления и его тестирование в форме Windows Form.
Чтобы построить элемент управления
В меню Построение выберите Построить решение.
При построении компилятор не должен выдать ни одной ошибки или предупреждения.
Чтобы создать тестовый проект
В меню Файл выберите Добавить и щелкните Новый проект, чтобы открыть диалоговое окно Добавление нового проекта.
Выберите узел Windows под узлом Visual C# и щелкните Приложение Windows Forms.
В поле Имя введите Test.
В обозревателе решений щелкните правой кнопкой мыши узел Ссылки тестового проекта, а затем выберите в контекстном меню команду Добавить ссылку, чтобы открыть диалоговое окно Добавление ссылки.
Перейдите на вкладку Проекты. Под строкой Имя проекта будет отображен проект ValueButtonLib. Дважды щелкните проект, чтобы добавить ссылку на тестовый проект.
В обозревателе решений щелкните правой кнопкой мыши Test и выберите пункт Построить.
Чтобы добавить элемент управления в форму, выполните следующие действия.
В обозревателе решений щелкните правой кнопкой мыши Form1.cs и выберите команду Открыть в конструкторе.
На панели элементов щелкните ValueButtonLib Components. Дважды щелкните ValueButton.
Элемент ValueButton появится в форме.
Щелкните правой кнопкой мыши элемент ValueButton и выберите в контекстном меню команду Свойства.
В окне Свойства просмотрите свойства этого элемента управления. Обратите внимание, что все они идентичны свойствам стандартной кнопки, за исключением дополнительного свойства ButtonValue.
Установите свойство ButtonValue равным 5.
На вкладке Все формы Windows Formsпанели элементов дважды щелкните Подпись, чтобы добавить в форму элемент Label.
Переместите подпись в центр формы.
Дважды щелкните файл valueButton1.
В Редакторе кода откроется событие valueButton1_Click.
Вставьте следующую строку кода.
[C#]
label1.Text = valueButton1.ButtonValue.ToString();
В обозревателе решений щелкните правой кнопкой мыши Тест и выберите в контекстном меню команду Назначить автозагружаемым проектом.
В меню Отладка выберите команду Начать отладку.
Появится Form1.
Нажмите кнопку valueButton1.
В элементе label1 будет отображена цифра 5, что подтверждает передачу свойства ButtonValue наследуемого элемента управления элементу label1 с помощью метода valueButton1_Click. Таким образом, элемент управления ValueButton наследует все функциональные возможности стандартной кнопки форм Windows Forms и, кроме того, предоставляет дополнительное настраиваемое свойство.